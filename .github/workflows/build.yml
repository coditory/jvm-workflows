name: Build

on:
  workflow_call:
    inputs:
      java-version:
        type: string
        required: true
      java-distribution:
        type: string
        required: false
        default: 'temurin'
      build-command:
        type: string
        required: true
      coverage-files:
        type: string
        required: false
        default: build/reports/kover/report.xml,build/reports/jacoco/coverage/coverage.xml
      skip-files:
        type: string
        required: false
        default: |
          ^.gitignore
          ^[^/]*\.md
          ^.github/.*\.md
          ^docs/.*
          ^gradle.properties
      snapshot-command:
        type: string
        required: false

jobs:
  coditory-jvm-build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    # Skip duplicate build on pull_request if pull request uses branch from the same repository
    if: github.event_name != 'pull_request' || github.repository != github.event.pull_request.head.repo.full_name
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Required to deduce version from git tags
          fetch-depth: 0

      - name: Skip build if not needed
        id: skipper
        uses: coditory/skip-action@v1
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          skip-files: ${{ inputs.skip-files }}

      - name: Setup JDK
        uses: actions/setup-java@v4
        if: steps.skipper.outputs.skip != 'true'
        with:
          java-version: ${{ inputs.java-version }}
          distribution: ${{ inputs.java-distribution }}

      - name: Validate gradle wrapper
        uses: gradle/actions/wrapper-validation@v4
        if: steps.skipper.outputs.skip != 'true'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        if: steps.skipper.outputs.skip != 'true'
        with:
          # Publish dependency graph only for the default branch
          dependency-graph: |
            ${{ (github.event.repository != null && github.ref_name == github.event.repository.default_branch)
            && 'generate-and-submit' || 'disabled' }}

      - name: Build
        if: steps.skipper.outputs.skip != 'true'
        run: ${{ inputs.build-command }}

      - name: Publish Coverage Report
        uses: codecov/codecov-action@v4
        continue-on-error: true
        # Publish coverage only for the default branch
        if: |
          steps.skipper.outputs.skip != 'true'
          && github.event.repository != null
          && github.ref_name == github.event.repository.default_branch
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          override_commit: ${{ github.event.workflow_run.head_sha }}
          override_branch: ${{ github.event.workflow_run.head_branch }}
          override_build: ${{ github.event.workflow_run.id }}
          disable_search: true
          files: ${{ inputs.coverage-files }}

      - name: Version
        id: version
        if: |
          steps.skipper.outputs.skip != 'true'
          && github.snapshot-command != ''
          && github.event_name == 'push'
          && (github.ref_name == github.event.repository.default_branch || (startsWith(github.ref_name, 'v') && endsWith(github.ref_name, '.x.x')))
        uses: coditory/version-action@v1
        with:
          snapshot: true

      - name: Publish Snapshot
        if: steps.version.outcome == 'success'
        # Publishing to maven central sometimes fails
        continue-on-error: true
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          NEXT_VERSION: ${{ steps.version.outputs.next_version }}
          SIGNING_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          SIGNING_PASSWORD: ${{ secrets.GPG_PASSPHRASE }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          OSSRH_STAGING_PROFILE_ID: ${{ secrets.OSSRH_STAGING_PROFILE_ID }}
        run: |
          ${{ inputs.snapshot-command }}
          echo "Published snapshot version $NEXT_VERSION ðŸš€" | tee -a $GITHUB_STEP_SUMMARY
